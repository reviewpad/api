// Copyright 2023 Explore.dev Unipessoal Lda. All Rights Reserved.
// Use of this source code is governed by a license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.21.12
// source: entities/commit_file.proto

package entities

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommitFile_CommitFileStatus int32

const (
	CommitFile_UNKNOWN   CommitFile_CommitFileStatus = 0
	CommitFile_ADDED     CommitFile_CommitFileStatus = 1
	CommitFile_REMOVED   CommitFile_CommitFileStatus = 2
	CommitFile_MODIFIED  CommitFile_CommitFileStatus = 3
	CommitFile_RENAMED   CommitFile_CommitFileStatus = 4
	CommitFile_COPIED    CommitFile_CommitFileStatus = 5
	CommitFile_CHANGED   CommitFile_CommitFileStatus = 6
	CommitFile_UNCHANGED CommitFile_CommitFileStatus = 7
)

// Enum value maps for CommitFile_CommitFileStatus.
var (
	CommitFile_CommitFileStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "ADDED",
		2: "REMOVED",
		3: "MODIFIED",
		4: "RENAMED",
		5: "COPIED",
		6: "CHANGED",
		7: "UNCHANGED",
	}
	CommitFile_CommitFileStatus_value = map[string]int32{
		"UNKNOWN":   0,
		"ADDED":     1,
		"REMOVED":   2,
		"MODIFIED":  3,
		"RENAMED":   4,
		"COPIED":    5,
		"CHANGED":   6,
		"UNCHANGED": 7,
	}
)

func (x CommitFile_CommitFileStatus) Enum() *CommitFile_CommitFileStatus {
	p := new(CommitFile_CommitFileStatus)
	*p = x
	return p
}

func (x CommitFile_CommitFileStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommitFile_CommitFileStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_entities_commit_file_proto_enumTypes[0].Descriptor()
}

func (CommitFile_CommitFileStatus) Type() protoreflect.EnumType {
	return &file_entities_commit_file_proto_enumTypes[0]
}

func (x CommitFile_CommitFileStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommitFile_CommitFileStatus.Descriptor instead.
func (CommitFile_CommitFileStatus) EnumDescriptor() ([]byte, []int) {
	return file_entities_commit_file_proto_rawDescGZIP(), []int{0, 0}
}

type CommitFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sha              string                      `protobuf:"bytes,1,opt,name=sha,proto3" json:"sha,omitempty"`
	Filename         string                      `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	PreviousFileName string                      `protobuf:"bytes,3,opt,name=previous_file_name,json=previousFileName,proto3" json:"previous_file_name,omitempty"`
	AdditionsCount   int64                       `protobuf:"varint,4,opt,name=additions_count,json=additionsCount,proto3" json:"additions_count,omitempty"`
	DeletionsCount   int64                       `protobuf:"varint,5,opt,name=deletions_count,json=deletionsCount,proto3" json:"deletions_count,omitempty"`
	ChangesCount     int64                       `protobuf:"varint,6,opt,name=changes_count,json=changesCount,proto3" json:"changes_count,omitempty"`
	Patch            string                      `protobuf:"bytes,7,opt,name=patch,proto3" json:"patch,omitempty"`
	Status           CommitFile_CommitFileStatus `protobuf:"varint,8,opt,name=status,proto3,enum=entities.CommitFile_CommitFileStatus" json:"status,omitempty"`
}

func (x *CommitFile) Reset() {
	*x = CommitFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_commit_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitFile) ProtoMessage() {}

func (x *CommitFile) ProtoReflect() protoreflect.Message {
	mi := &file_entities_commit_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitFile.ProtoReflect.Descriptor instead.
func (*CommitFile) Descriptor() ([]byte, []int) {
	return file_entities_commit_file_proto_rawDescGZIP(), []int{0}
}

func (x *CommitFile) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *CommitFile) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *CommitFile) GetPreviousFileName() string {
	if x != nil {
		return x.PreviousFileName
	}
	return ""
}

func (x *CommitFile) GetAdditionsCount() int64 {
	if x != nil {
		return x.AdditionsCount
	}
	return 0
}

func (x *CommitFile) GetDeletionsCount() int64 {
	if x != nil {
		return x.DeletionsCount
	}
	return 0
}

func (x *CommitFile) GetChangesCount() int64 {
	if x != nil {
		return x.ChangesCount
	}
	return 0
}

func (x *CommitFile) GetPatch() string {
	if x != nil {
		return x.Patch
	}
	return ""
}

func (x *CommitFile) GetStatus() CommitFile_CommitFileStatus {
	if x != nil {
		return x.Status
	}
	return CommitFile_UNKNOWN
}

var File_entities_commit_file_proto protoreflect.FileDescriptor

var file_entities_commit_file_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xb0, 0x03, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x68, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x3d,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7a, 0x0a,
	0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x44, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x4d,
	0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x50, 0x49, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x07, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x70, 0x61,
	0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entities_commit_file_proto_rawDescOnce sync.Once
	file_entities_commit_file_proto_rawDescData = file_entities_commit_file_proto_rawDesc
)

func file_entities_commit_file_proto_rawDescGZIP() []byte {
	file_entities_commit_file_proto_rawDescOnce.Do(func() {
		file_entities_commit_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_entities_commit_file_proto_rawDescData)
	})
	return file_entities_commit_file_proto_rawDescData
}

var file_entities_commit_file_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_entities_commit_file_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_entities_commit_file_proto_goTypes = []interface{}{
	(CommitFile_CommitFileStatus)(0), // 0: entities.CommitFile.CommitFileStatus
	(*CommitFile)(nil),               // 1: entities.CommitFile
}
var file_entities_commit_file_proto_depIdxs = []int32{
	0, // 0: entities.CommitFile.status:type_name -> entities.CommitFile.CommitFileStatus
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_entities_commit_file_proto_init() }
func file_entities_commit_file_proto_init() {
	if File_entities_commit_file_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entities_commit_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entities_commit_file_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entities_commit_file_proto_goTypes,
		DependencyIndexes: file_entities_commit_file_proto_depIdxs,
		EnumInfos:         file_entities_commit_file_proto_enumTypes,
		MessageInfos:      file_entities_commit_file_proto_msgTypes,
	}.Build()
	File_entities_commit_file_proto = out.File
	file_entities_commit_file_proto_rawDesc = nil
	file_entities_commit_file_proto_goTypes = nil
	file_entities_commit_file_proto_depIdxs = nil
}
