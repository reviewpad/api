// Copyright 2022 Explore.dev Unipessoal Lda. All Rights Reserved.
// Use of this source code is governed by a license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.4
// source: entities/language.proto

package entities

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AgnosticType int32

const (
	AgnosticType_UNSPECIFIED AgnosticType = 0
	AgnosticType_CLASS       AgnosticType = 1
	AgnosticType_INTERFACE   AgnosticType = 2
	AgnosticType_ENUM        AgnosticType = 3
	AgnosticType_FUNCTION    AgnosticType = 4
	AgnosticType_METHOD      AgnosticType = 5
	AgnosticType_PROPERTY    AgnosticType = 6
	AgnosticType_TYPE        AgnosticType = 7
	AgnosticType_VARIABLE    AgnosticType = 8
	AgnosticType_EXPORT      AgnosticType = 9
	AgnosticType_CONSTANT    AgnosticType = 10
	AgnosticType_CONSTRUCTOR AgnosticType = 11
	AgnosticType_OTHER       AgnosticType = 12
)

// Enum value maps for AgnosticType.
var (
	AgnosticType_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "CLASS",
		2:  "INTERFACE",
		3:  "ENUM",
		4:  "FUNCTION",
		5:  "METHOD",
		6:  "PROPERTY",
		7:  "TYPE",
		8:  "VARIABLE",
		9:  "EXPORT",
		10: "CONSTANT",
		11: "CONSTRUCTOR",
		12: "OTHER",
	}
	AgnosticType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"CLASS":       1,
		"INTERFACE":   2,
		"ENUM":        3,
		"FUNCTION":    4,
		"METHOD":      5,
		"PROPERTY":    6,
		"TYPE":        7,
		"VARIABLE":    8,
		"EXPORT":      9,
		"CONSTANT":    10,
		"CONSTRUCTOR": 11,
		"OTHER":       12,
	}
)

func (x AgnosticType) Enum() *AgnosticType {
	p := new(AgnosticType)
	*p = x
	return p
}

func (x AgnosticType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgnosticType) Descriptor() protoreflect.EnumDescriptor {
	return file_entities_language_proto_enumTypes[0].Descriptor()
}

func (AgnosticType) Type() protoreflect.EnumType {
	return &file_entities_language_proto_enumTypes[0]
}

func (x AgnosticType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgnosticType.Descriptor instead.
func (AgnosticType) EnumDescriptor() ([]byte, []int) {
	return file_entities_language_proto_rawDescGZIP(), []int{0}
}

type WordReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line int32     `protobuf:"varint,1,opt,name=line,proto3" json:"line,omitempty"`
	Span *WordSpan `protobuf:"bytes,2,opt,name=span,proto3" json:"span,omitempty"`
}

func (x *WordReference) Reset() {
	*x = WordReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_language_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordReference) ProtoMessage() {}

func (x *WordReference) ProtoReflect() protoreflect.Message {
	mi := &file_entities_language_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordReference.ProtoReflect.Descriptor instead.
func (*WordReference) Descriptor() ([]byte, []int) {
	return file_entities_language_proto_rawDescGZIP(), []int{0}
}

func (x *WordReference) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *WordReference) GetSpan() *WordSpan {
	if x != nil {
		return x.Span
	}
	return nil
}

type Symbols struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files   map[string]*File   `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Symbols map[string]*Symbol `protobuf:"bytes,2,rep,name=symbols,proto3" json:"symbols,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Symbols) Reset() {
	*x = Symbols{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_language_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Symbols) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Symbols) ProtoMessage() {}

func (x *Symbols) ProtoReflect() protoreflect.Message {
	mi := &file_entities_language_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Symbols.ProtoReflect.Descriptor instead.
func (*Symbols) Descriptor() ([]byte, []int) {
	return file_entities_language_proto_rawDescGZIP(), []int{1}
}

func (x *Symbols) GetFiles() map[string]*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Symbols) GetSymbols() map[string]*Symbol {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type Symbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	//Uniquely identifies symbol in analysis
	Id         string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Definition *Definition            `protobuf:"bytes,3,opt,name=definition,proto3" json:"definition,omitempty"`
	Type       string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	FileUsages map[string]*FileUsages `protobuf:"bytes,5,rep,name=fileUsages,proto3" json:"fileUsages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//Uniquely identifies symbol in parent. Must not depend on file path, but may change if symbol name or type changes.
	LocalId      string                 `protobuf:"bytes,6,opt,name=local_id,json=localId,proto3" json:"local_id,omitempty"`
	TypeRank     int32                  `protobuf:"varint,7,opt,name=type_rank,json=typeRank,proto3" json:"type_rank,omitempty"`
	InnerSymbols map[string]string      `protobuf:"bytes,8,rep,name=inner_symbols,json=innerSymbols,proto3" json:"inner_symbols,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //Local id to global id
	Parent       string                 `protobuf:"bytes,9,opt,name=parent,proto3" json:"parent,omitempty"`                                                                                                                         //Parent id
	AgnosticType AgnosticType           `protobuf:"varint,10,opt,name=agnostic_type,json=agnosticType,proto3,enum=entities.AgnosticType" json:"agnostic_type,omitempty"`
	CodeComments []*SymbolDocumentation `protobuf:"bytes,11,rep,name=code_comments,json=codeComments,proto3" json:"code_comments,omitempty"`
	Signature    *SymbolDocumentation   `protobuf:"bytes,12,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *Symbol) Reset() {
	*x = Symbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_language_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Symbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Symbol) ProtoMessage() {}

func (x *Symbol) ProtoReflect() protoreflect.Message {
	mi := &file_entities_language_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Symbol.ProtoReflect.Descriptor instead.
func (*Symbol) Descriptor() ([]byte, []int) {
	return file_entities_language_proto_rawDescGZIP(), []int{2}
}

func (x *Symbol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Symbol) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Symbol) GetDefinition() *Definition {
	if x != nil {
		return x.Definition
	}
	return nil
}

func (x *Symbol) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Symbol) GetFileUsages() map[string]*FileUsages {
	if x != nil {
		return x.FileUsages
	}
	return nil
}

func (x *Symbol) GetLocalId() string {
	if x != nil {
		return x.LocalId
	}
	return ""
}

func (x *Symbol) GetTypeRank() int32 {
	if x != nil {
		return x.TypeRank
	}
	return 0
}

func (x *Symbol) GetInnerSymbols() map[string]string {
	if x != nil {
		return x.InnerSymbols
	}
	return nil
}

func (x *Symbol) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *Symbol) GetAgnosticType() AgnosticType {
	if x != nil {
		return x.AgnosticType
	}
	return AgnosticType_UNSPECIFIED
}

func (x *Symbol) GetCodeComments() []*SymbolDocumentation {
	if x != nil {
		return x.CodeComments
	}
	return nil
}

func (x *Symbol) GetSignature() *SymbolDocumentation {
	if x != nil {
		return x.Signature
	}
	return nil
}

type SymbolDocumentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Span *Span  `protobuf:"bytes,2,opt,name=span,proto3" json:"span,omitempty"`
}

func (x *SymbolDocumentation) Reset() {
	*x = SymbolDocumentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_language_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolDocumentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolDocumentation) ProtoMessage() {}

func (x *SymbolDocumentation) ProtoReflect() protoreflect.Message {
	mi := &file_entities_language_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolDocumentation.ProtoReflect.Descriptor instead.
func (*SymbolDocumentation) Descriptor() ([]byte, []int) {
	return file_entities_language_proto_rawDescGZIP(), []int{3}
}

func (x *SymbolDocumentation) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SymbolDocumentation) GetSpan() *Span {
	if x != nil {
		return x.Span
	}
	return nil
}

type FileUsages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string            `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Imports  []*ReferenceBlock `protobuf:"bytes,2,rep,name=imports,proto3" json:"imports,omitempty"`
	Usages   []*ReferenceBlock `protobuf:"bytes,3,rep,name=usages,proto3" json:"usages,omitempty"`
}

func (x *FileUsages) Reset() {
	*x = FileUsages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_language_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUsages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUsages) ProtoMessage() {}

func (x *FileUsages) ProtoReflect() protoreflect.Message {
	mi := &file_entities_language_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUsages.ProtoReflect.Descriptor instead.
func (*FileUsages) Descriptor() ([]byte, []int) {
	return file_entities_language_proto_rawDescGZIP(), []int{4}
}

func (x *FileUsages) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileUsages) GetImports() []*ReferenceBlock {
	if x != nil {
		return x.Imports
	}
	return nil
}

func (x *FileUsages) GetUsages() []*ReferenceBlock {
	if x != nil {
		return x.Usages
	}
	return nil
}

type Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk string `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Block *Span  `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *Context) Reset() {
	*x = Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_language_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_entities_language_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_entities_language_proto_rawDescGZIP(), []int{5}
}

func (x *Context) GetChunk() string {
	if x != nil {
		return x.Chunk
	}
	return ""
}

func (x *Context) GetBlock() *Span {
	if x != nil {
		return x.Block
	}
	return nil
}

type Definition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath       string            `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	MainDefinition *ReferenceBlock   `protobuf:"bytes,2,opt,name=main_definition,json=mainDefinition,proto3" json:"main_definition,omitempty"`
	Declarations   []*ReferenceBlock `protobuf:"bytes,3,rep,name=declarations,proto3" json:"declarations,omitempty"`
}

func (x *Definition) Reset() {
	*x = Definition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_language_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Definition) ProtoMessage() {}

func (x *Definition) ProtoReflect() protoreflect.Message {
	mi := &file_entities_language_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Definition.ProtoReflect.Descriptor instead.
func (*Definition) Descriptor() ([]byte, []int) {
	return file_entities_language_proto_rawDescGZIP(), []int{6}
}

func (x *Definition) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *Definition) GetMainDefinition() *ReferenceBlock {
	if x != nil {
		return x.MainDefinition
	}
	return nil
}

func (x *Definition) GetDeclarations() []*ReferenceBlock {
	if x != nil {
		return x.Declarations
	}
	return nil
}

type ReferenceBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context   *Context       `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Reference *WordReference `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	Signature *SpanAST       `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Body      *SpanAST       `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ReferenceBlock) Reset() {
	*x = ReferenceBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_language_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferenceBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferenceBlock) ProtoMessage() {}

func (x *ReferenceBlock) ProtoReflect() protoreflect.Message {
	mi := &file_entities_language_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferenceBlock.ProtoReflect.Descriptor instead.
func (*ReferenceBlock) Descriptor() ([]byte, []int) {
	return file_entities_language_proto_rawDescGZIP(), []int{7}
}

func (x *ReferenceBlock) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ReferenceBlock) GetReference() *WordReference {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *ReferenceBlock) GetSignature() *SpanAST {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ReferenceBlock) GetBody() *SpanAST {
	if x != nil {
		return x.Body
	}
	return nil
}

type SpanAST struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AstTokens []string `protobuf:"bytes,1,rep,name=ast_tokens,json=astTokens,proto3" json:"ast_tokens,omitempty"`
	Block     *Span    `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	Code      string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SpanAST) Reset() {
	*x = SpanAST{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_language_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpanAST) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpanAST) ProtoMessage() {}

func (x *SpanAST) ProtoReflect() protoreflect.Message {
	mi := &file_entities_language_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpanAST.ProtoReflect.Descriptor instead.
func (*SpanAST) Descriptor() ([]byte, []int) {
	return file_entities_language_proto_rawDescGZIP(), []int{8}
}

func (x *SpanAST) GetAstTokens() []string {
	if x != nil {
		return x.AstTokens
	}
	return nil
}

func (x *SpanAST) GetBlock() *Span {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *SpanAST) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	BlobId   string            `protobuf:"bytes,2,opt,name=blob_id,json=blobId,proto3" json:"blob_id,omitempty"`
	NumLines int32             `protobuf:"varint,3,opt,name=num_lines,json=numLines,proto3" json:"num_lines,omitempty"`
	Symbols  map[string]string `protobuf:"bytes,4,rep,name=symbols,proto3" json:"symbols,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //Local id to symbol id
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entities_language_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_entities_language_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_entities_language_proto_rawDescGZIP(), []int{9}
}

func (x *File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *File) GetBlobId() string {
	if x != nil {
		return x.BlobId
	}
	return ""
}

func (x *File) GetNumLines() int32 {
	if x != nil {
		return x.NumLines
	}
	return 0
}

func (x *File) GetSymbols() map[string]string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

var File_entities_language_proto protoreflect.FileDescriptor

var file_entities_language_proto_rawDesc = []byte{
	0x0a, 0x17, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x1a, 0x13, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x73, 0x70,
	0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x26, 0x0a,
	0x04, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x53, 0x70, 0x61, 0x6e, 0x52,
	0x04, 0x73, 0x70, 0x61, 0x6e, 0x22, 0x8f, 0x02, 0x0a, 0x07, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x12, 0x32, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x1a,
	0x48, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4c, 0x0a, 0x0c, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa5, 0x05, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x40, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x47, 0x0a, 0x0d, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x41, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x63, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x53, 0x0a, 0x0f, 0x46, 0x69, 0x6c,
	0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f,
	0x0a, 0x11, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x4d, 0x0a, 0x13, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x73, 0x70,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x22, 0x8f,
	0x01, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x07, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x07, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x30,
	0x0a, 0x06, 0x75, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x75, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x45, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x61, 0x6e,
	0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0xaa, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x41, 0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0c, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0c, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x41, 0x53,
	0x54, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x41, 0x53, 0x54, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x22, 0x62, 0x0a, 0x07, 0x53, 0x70, 0x61, 0x6e, 0x41, 0x53, 0x54, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x24, 0x0a,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6e, 0x75, 0x6d, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0xb9, 0x01,
	0x0a, 0x0c, 0x41, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f,
	0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x4e, 0x55,
	0x4d, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x04, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x10, 0x05, 0x12, 0x0c, 0x0a,
	0x08, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x09, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x54, 0x10, 0x0a, 0x12, 0x0f, 0x0a,
	0x0b, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x0b, 0x12, 0x09,
	0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x0c, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x70, 0x61,
	0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entities_language_proto_rawDescOnce sync.Once
	file_entities_language_proto_rawDescData = file_entities_language_proto_rawDesc
)

func file_entities_language_proto_rawDescGZIP() []byte {
	file_entities_language_proto_rawDescOnce.Do(func() {
		file_entities_language_proto_rawDescData = protoimpl.X.CompressGZIP(file_entities_language_proto_rawDescData)
	})
	return file_entities_language_proto_rawDescData
}

var file_entities_language_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_entities_language_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_entities_language_proto_goTypes = []interface{}{
	(AgnosticType)(0),           // 0: entities.AgnosticType
	(*WordReference)(nil),       // 1: entities.WordReference
	(*Symbols)(nil),             // 2: entities.Symbols
	(*Symbol)(nil),              // 3: entities.Symbol
	(*SymbolDocumentation)(nil), // 4: entities.SymbolDocumentation
	(*FileUsages)(nil),          // 5: entities.FileUsages
	(*Context)(nil),             // 6: entities.Context
	(*Definition)(nil),          // 7: entities.Definition
	(*ReferenceBlock)(nil),      // 8: entities.ReferenceBlock
	(*SpanAST)(nil),             // 9: entities.SpanAST
	(*File)(nil),                // 10: entities.File
	nil,                         // 11: entities.Symbols.FilesEntry
	nil,                         // 12: entities.Symbols.SymbolsEntry
	nil,                         // 13: entities.Symbol.FileUsagesEntry
	nil,                         // 14: entities.Symbol.InnerSymbolsEntry
	nil,                         // 15: entities.File.SymbolsEntry
	(*WordSpan)(nil),            // 16: entities.WordSpan
	(*Span)(nil),                // 17: entities.Span
}
var file_entities_language_proto_depIdxs = []int32{
	16, // 0: entities.WordReference.span:type_name -> entities.WordSpan
	11, // 1: entities.Symbols.files:type_name -> entities.Symbols.FilesEntry
	12, // 2: entities.Symbols.symbols:type_name -> entities.Symbols.SymbolsEntry
	7,  // 3: entities.Symbol.definition:type_name -> entities.Definition
	13, // 4: entities.Symbol.fileUsages:type_name -> entities.Symbol.FileUsagesEntry
	14, // 5: entities.Symbol.inner_symbols:type_name -> entities.Symbol.InnerSymbolsEntry
	0,  // 6: entities.Symbol.agnostic_type:type_name -> entities.AgnosticType
	4,  // 7: entities.Symbol.code_comments:type_name -> entities.SymbolDocumentation
	4,  // 8: entities.Symbol.signature:type_name -> entities.SymbolDocumentation
	17, // 9: entities.SymbolDocumentation.span:type_name -> entities.Span
	8,  // 10: entities.FileUsages.imports:type_name -> entities.ReferenceBlock
	8,  // 11: entities.FileUsages.usages:type_name -> entities.ReferenceBlock
	17, // 12: entities.Context.block:type_name -> entities.Span
	8,  // 13: entities.Definition.main_definition:type_name -> entities.ReferenceBlock
	8,  // 14: entities.Definition.declarations:type_name -> entities.ReferenceBlock
	6,  // 15: entities.ReferenceBlock.context:type_name -> entities.Context
	1,  // 16: entities.ReferenceBlock.reference:type_name -> entities.WordReference
	9,  // 17: entities.ReferenceBlock.signature:type_name -> entities.SpanAST
	9,  // 18: entities.ReferenceBlock.body:type_name -> entities.SpanAST
	17, // 19: entities.SpanAST.block:type_name -> entities.Span
	15, // 20: entities.File.symbols:type_name -> entities.File.SymbolsEntry
	10, // 21: entities.Symbols.FilesEntry.value:type_name -> entities.File
	3,  // 22: entities.Symbols.SymbolsEntry.value:type_name -> entities.Symbol
	5,  // 23: entities.Symbol.FileUsagesEntry.value:type_name -> entities.FileUsages
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_entities_language_proto_init() }
func file_entities_language_proto_init() {
	if File_entities_language_proto != nil {
		return
	}
	file_entities_span_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_entities_language_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_language_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Symbols); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_language_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Symbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_language_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolDocumentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_language_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUsages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_language_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_language_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Definition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_language_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferenceBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_language_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpanAST); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entities_language_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entities_language_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entities_language_proto_goTypes,
		DependencyIndexes: file_entities_language_proto_depIdxs,
		EnumInfos:         file_entities_language_proto_enumTypes,
		MessageInfos:      file_entities_language_proto_msgTypes,
	}.Build()
	File_entities_language_proto = out.File
	file_entities_language_proto_rawDesc = nil
	file_entities_language_proto_goTypes = nil
	file_entities_language_proto_depIdxs = nil
}
